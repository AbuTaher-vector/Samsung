#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int find(int l,int r,vector<int>&v,vector<vector<int>>&dp){
    if(l>r) return 0;
    if(dp[l][r]!=-1) return dp[l][r];
    int mx=-1;
    for(int i=l;i<=r;i++){
        int a;
        if(l==1 && r==v.size()-2) a = v[i];
        else a = v[l-1]*v[r+1];
        a+=find(l,i-1,v,dp)+find(i+1,r,v,dp);
        mx=max(a,mx);
        
    }
    return dp[l][r] = mx;
}
int main() {
   int n;
    cin>>n;
    vector<int>v(n+2);
    for(int i=1;i<=n;i++) cin>>v[i];
    vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
    v[0]=1,v[n+1]=1;
    cout<<find(1,n,v,dp)<<"\n";   
}
//Link : https://www.hackerrank.com/contests/target-samsung-13-nov19/challenges/burst-balloons-1/problem
