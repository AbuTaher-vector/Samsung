/*

Find if given graph is bipartite or not, if it is bipartite then print either white color nodes or black color nodes.


Constraint :  No. of nodes<=1000
*/

#include<climits>
#include<cmath>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<iostream>
using namespace std;
int color[1001];
vector<int>g[1001];
int vis[1001];
bool ok = true;
void dfs(int u){
  vis[u]=1;
  for(auto v:g[u]){
    if(!vis[v]){
        color[v]=color[u]^1;
        dfs(v);
    }else if(color[u]==color[v]){
        ok = false;
    }
  }
}
int main(){
    int n,m;
    cin>>n>>m;
    int u,v;
    while(m--){
      cin>>u>>v;
      g[u].push_back(v);
      g[v].push_back(u);
    }
    for(int i=0;i<n;i++){
      if(!vis[i]){
        dfs(i);
      }
    }
    if(!ok) cout<<"NO\n";
    else{
      for(int i=0;i<n;i++){
        if(color[i]==0) cout<<i<<" ";
      }
      cout<<"\n";
    }
}
