#include<climits>
#include<cmath>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<iostream>
using namespace std;
int arr[11][11],vis[11][11],path[11][11];
int ans = INT_MIN;
int n;
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};
bool issafe(int x,int y){
  if(x>=0 && y>=0 && x<n && y<n)return true;
  else return false;
}
void find(int x,int y,int cnt){
  if(x==n-1 && y==n-1){
      if(cnt>=ans){
          ans=cnt;
      for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
          if(vis[i][j]){
              path[i][j]=3;
          }else path[i][j] = arr[i][j];
        }
      }
    }
      return;
  }
  for(int i=0;i<4;i++){
     int nx = x+dx[i];
     int ny = y+dy[i];
     if(issafe(nx,ny)){
        if(arr[nx][ny]==2 && vis[nx][ny]==0){
          vis[nx][ny]=1;
          find(nx,ny,cnt+1);
          vis[nx][ny]=0;
        }
        else if(arr[nx][ny]==0 && vis[nx][ny]==0){
          vis[nx][ny]=1;
          find(nx,ny,cnt);
          vis[nx][ny]=0;
        }
     }
  }
}

int main(){
  int t;
  cin>>t;
  for(int i=1;i<=t;i++){
      cin>>n;
     for(int j=0;j<n;j++){
      for(int k=0;k<n;k++) cin>>arr[j][k];
      }
       vis[0][0]=1;
      if(arr[0][0]==2) find(0,0,1);
      else find(0,0,0);
      cout<<"#"<<i<<" "<<ans<<"\n";
      for(int j=0;j<n;j++){
       for(int k=0;k<n;k++){
           cout<<path[j][k]<<" ";
       }
       cout<<"\n";
    }
  }
}
// Link : https://blog.csdn.net/broadCE/article/details/47959227
