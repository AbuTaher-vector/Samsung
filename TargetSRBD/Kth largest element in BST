/*
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

// return the Kth largest element in the given BST rooted at 'root'
class Solution
{
    public:
    int ans;
    void find(Node *root,int K,int &cnt){
        if(root==NULL || cnt>K) return;
        find(root->right,K,cnt);
        cnt++;
        if(cnt==K){
            ans=root->data;
            return;
        }
        find(root->left,K,cnt);
    }
    int kthLargest(Node *root, int K)
    {
        int cnt=0;
       find(root,K,cnt);
       return ans;
    }
};
//Link : https://www.geeksforgeeks.org/problems/kth-largest-element-in-bst/1
